<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.EmpMapper">
    <!-- 更新员工基本信息 -->
    <update id="updateById">
        update emp
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="image != null and image != ''">
                image = #{image},
            </if>
            <if test="job != null">
                job = #{job},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="salary != null">
                salary = #{salary},
            </if>
            <if test="entryDate != null">
                entry_date = #{entryDate},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!-- 批量删除员工基本信息-->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 条件查询员工-->
    <select id="list" resultType="com.example.pojo.Emp">
        select e.*, d.name deptName
        from emp e left join dept d on e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and e.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and e.entry_date between #{begin} and #{end}
            </if>
        </where>
        order by e.update_time desc
    </select>

    <!--  定义ResultMap  -->
    <resultMap id="empResultMap" type="com.example.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="image" property="image"/>
        <result column="job" property="job"/>
        <result column="dept_id" property="deptId"/>
        <result column="phone" property="phone"/>
        <result column="salary" property="salary"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_name" property="deptName"/>
        <collection property="exprList" ofType="com.example.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_id" property="id"/>
            <result column="ee_empid" property="empId"/>
            <result column="ee_begin_date" property="beginDate"/>
            <result column="ee_end_date" property="endDate"/>
            <result column="ee_company" property="company"/>
        </collection>

    </resultMap>
    <!--  根据id查询员工基本信息以及工作经历  -->
    <select id="getById" resultMap="empResultMap">
        select
            e.*,
            ee.id ee_id,
            ee.emp_id ee_empid,
            ee.begin_date ee_begin_date,
            ee.end_date ee_end_date,
            ee.company ee_company,
            ee.job ee_job
        from emp e left join emp_expr ee on ee.emp_id = e.id
        where e.id = #{id}
    </select>

    <!--  查询员工职位人数  -->
    <select id="countEmpJobData" resultType="java.util.Map">
        select
            (case when job = 1 then '班主任'
                  when job = 2 then '讲师'
                  when job = 3 then '学工主管'
                  when job = 4 then '校验主管'
                  when job = 5 then '咨询师'
                  else '其他职位' end
            )pos,
            count(*) num
        from emp group by job order by num;
    </select>

    <!--  统计员工性别人数  -->
    <select id="countEmpGenderData" resultType="java.util.Map">
        select if(gender = 1, '男', '女') label,
               count(*) value
        from emp
        group by gender;
    </select>
</mapper>